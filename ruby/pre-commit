#!/usr/bin/env ruby

exitcode = 0

# Get list of files that were touched (but not those that were deleted)
touched_files = `git diff-index HEAD --cached --name-only -z --diff-filter=ACRMT`.split("\0")

def red(string)
  "\e[31m#{string}\e[m"
end

# Check for missing eof newlines
touched_files.each do |file|
  begin
    next unless File.file?(file)

    file_size = File.size(file)
    next unless file_size > 0

    file_type = `file --mime --brief #{file}`.chomp
    next unless file_type.match(%r[\Atext/])

    offset = file_size - 1
    if File.read(file, 1, offset) != "\n"
      puts "#{file}: missing newline at EOF."
      exitcode = 1
    end
  rescue => ex
    warn red("Exception while checking file #{file}: #{ex.class.name} - #{ex.message}")
  end
end

# Check for other whitespace errors
exitcode = 1 unless system('git diff --cached --check')

# Check for binding.pry and other debugging things
forbidden_pattern = /\#\s*(RBC|RBF)|debugger|\.pry/i
diff = `git diff-index --cached -p HEAD -G '#{forbidden_pattern.source}' --color`
if diff.match(/^\+.*#{forbidden_pattern.source}/i)
  warn red('Error: forbidden string found')
  puts diff
  exitcode = 1
end

unless exitcode == 0
  warn red('Aborting commit due to failing checks.')
end
exit exitcode
